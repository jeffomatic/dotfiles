### ENVVARS

#export JAVA_HOME=`/usr/libexec/java_home`
export GOPATH=$HOME/go
export NODE_PATH=/usr/local/lib/node_modules
export GIT_SSH=ssh-git
export FONTCONFIG_PATH=/opt/X11/lib/X11/fontconfig
export PROMPT_COMMAND='history -a'

[[ -f "$HOME/.aws_creds" ]] && source "$HOME/.aws_creds"

### PATH EXTENSIONS

PATH="$HOME/.bin:$PATH"

if [[ -d "$HOME/bin" ]]; then
  PATH="$HOME/bin:$PATH"
fi

PATH="/usr/local/share/npm/bin:$PATH" # Add NPM global binaries to PATH
PATH="$GOPATH/bin:$PATH"
PATH="/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH"
PATH="/usr/local/heroku/bin:$PATH"
PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
export PATH

### PS1

# Load version control information
precmd() {
  GIT_DIRTY=`git rev-parse 2>/dev/null && (git diff --no-ext-diff --quiet --exit-code 2> /dev/null && echo -e "" || echo -e "*")`
  GIT_BRANCH=`git branch 2> /dev/null | grep -e '^*' | sed -E "s/^\* \(?([^)]+)\)?/ (\1$GIT_DIRTY)/"`
}

# Set up the prompt (with git branch name)
setopt PROMPT_SUBST
PROMPT='%F{green}%n@%M %F{blue}${PWD/#$HOME/~}%F{red}${GIT_BRANCH} %B%F{white}%#%f%b '

### shell completion

autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit

### run-help for builtins documentation

(( $+aliases[run-help] )) && unalias run-help
autoload -Uz run-help

### LANGUAGE VERSION MANAGEMENT

# ocaml
if [ -s "$HOME/.opam/opam-init/init.sh" ]; then
  . "$HOME/.opam/opam-init/init.sh" > /dev/null 2> /dev/null || true
fi

# ruby
command -v rbenv 1>/dev/null 2>&1 && eval "$(rbenv init -)"

# python
command -v pyenv 1>/dev/null 2>&1 && eval "$(pyenv init -)"

# rust
export PATH="$HOME/.cargo/bin:$PATH"

# nvm with lazy loading
export NVM_LAZY_LOAD=true
source $HOME/dotfiles/zsh-nvm.plugin.zsh

### OS-SPECIFIC CONFIG (mostly GNU vs BSD)

osType=$(echo $OSTYPE | sed -E 's/^darwin[0-9.]+/darwin/')
sysConfig=$HOME/.zshrc.$osType
if [ -f "$sysConfig" ]; then
  . "$sysConfig"
fi

### LOCAL CONFIG

localConfig=$HOME/.localrc
if [ -f $localConfig ]; then
  . $localConfig
fi
