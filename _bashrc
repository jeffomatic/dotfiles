### ENVVARS

# export JAVA_HOME=`/usr/libexec/java_home`
export GOPATH=$HOME/go
export NODE_PATH=/usr/local/lib/node_modules
export GIT_SSH=ssh-git
export FONTCONFIG_PATH=/opt/X11/lib/X11/fontconfig
export PROMPT_COMMAND='history -a'

[[ -f "$HOME/.aws_creds" ]] && source "$HOME/.aws_creds"

### PATH EXTENSIONS

PATH="$HOME/.bin:$PATH"

if [[ -d "$HOME/bin" ]]; then
  PATH="$HOME/bin:$PATH"
fi

PATH="/usr/local/share/npm/bin:$PATH" # Add NPM global binaries to PATH
PATH="$GOPATH/bin:$PATH"
PATH="/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH"
PATH="/usr/local/heroku/bin:$PATH"
PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
export PATH

### PS1

function color_my_prompt {
    local __user_and_host="\[\033[32m\]\u@\h"
    local __cur_location="\[\033[34m\]\w"
    local __git_branch_color="\[\033[31m\]"
    local __git_branch='`git branch 2> /dev/null | grep -e ^* | sed -E  s/^\\\\\*\ \(.+\)$/\(\\\\\1\)\/`'
    local __git_dirty='`git rev-parse 2>/dev/null && (git diff --no-ext-diff --quiet --exit-code 2> /dev/null && echo -e " " || echo -e "* ")`'
    local __prompt_tail="\[\033[37m\]$"
    local __last_color="\[\033[00m\]"
    export PS1="$__user_and_host $__cur_location $__git_branch_color$__git_branch$__git_dirty$__prompt_tail$__last_color "
}
color_my_prompt

### BASH COMPLETION

if (command -v brew >/dev/null 2>&1) && [ -f $(brew --prefix)/etc/bash_completion ]; then
  . $(brew --prefix)/etc/bash_completion
fi

### LANGUAGE VERSION MANAGEMENT

# Defer initialization of nvm until nvm, node or a node-dependent command is
# run. Ensure this block is only run once if .bashrc gets sourced multiple times
# by checking whether __init_nvm is a function.
if [ -s "$HOME/.nvm/nvm.sh" ] && [ ! "$(type -t __init_nvm)" = function ]; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
  declare -a __node_commands=('nvm' 'node' 'npm' 'yarn' 'gulp' 'grunt' 'webpack')
  function __init_nvm() {
    for i in "${__node_commands[@]}"; do unalias $i; done
    . "$NVM_DIR"/nvm.sh
    unset __node_commands
    unset -f __init_nvm
  }
  for i in "${__node_commands[@]}"; do alias $i='__init_nvm && '$i; done
fi

if [ -s "$HOME/.opam/opam-init/init.sh" ]; then
  . /Users/jeff/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true
fi

command -v rbenv >/dev/null && eval "$(rbenv init -)"

### ALIASES & UTILITY FUNCTIONS

alias ls="ls -GF"
alias vi="mvim -v"


